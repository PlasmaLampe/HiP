# Routes
# This file defines all application routes (Higher priority routes first)
#
# Note: @controllers syntax signifies the actual controller instance, retrieved via GlobalSettings.getController().
# ~~~~

GET     /                           @controllers.Application.index

GET     /admin/messages/all/:recName        @controllers.MessageController.getMessages(recName: String)
GET     /admin/messages/view/:recID         @controllers.MessageController.getDetails(recID: String)
POST    /admin/messages                     @controllers.MessageController.sendMessage

GET     /admin/chat/:uID            @controllers.ChatController.getChat(uID: String)
POST    /admin/chat/:newChat        @controllers.ChatController.postChat(newChat : String)
DELETE  /admin/chat/:uID            @controllers.ChatController.deleteChat(uID: String)

GET     /admin/languages/:lang      @controllers.LanguageController.getLanguageDataForClient(lang: String)
POST    /admin/languages            @controllers.LanguageController.postTerm

POST    /admin/topic                @controllers.TopicController.createTopic

POST    /admin/notification         @controllers.GroupController.addNotification

GET     /admin/group/:uID           @controllers.GroupController.getGroup(uID: String)
GET     /admin/groups               @controllers.GroupController.getGroups

POST    /admin/group                @controllers.GroupController.createGroup
DELETE  /admin/group/:uID           @controllers.GroupController.deleteGroup(uID: String)

POST    /admin/modify/group         @controllers.GroupController.modifyGroup


# SECURE SOCIAL
# Login page
GET     /login                      securesocial.controllers.LoginPage.login
GET     /logout                     securesocial.controllers.LoginPage.logout

# User Registration and password handling
GET     /signup                     securesocial.controllers.Registration.startSignUp
POST    /signup                     securesocial.controllers.Registration.handleStartSignUp
GET     /signup/:token              securesocial.controllers.Registration.signUp(token)
POST    /signup/:token              securesocial.controllers.Registration.handleSignUp(token)
GET     /reset                      securesocial.controllers.Registration.startResetPassword
POST    /reset                      securesocial.controllers.Registration.handleStartResetPassword
GET     /reset/:token               securesocial.controllers.Registration.resetPassword(token)
POST    /reset/:token               securesocial.controllers.Registration.handleResetPassword(token)
GET     /password                   securesocial.controllers.PasswordChange.page
POST    /password                   securesocial.controllers.PasswordChange.handlePasswordChange

# Providers entry points
GET     /authenticate/:provider     securesocial.controllers.ProviderController.authenticate(provider)
POST    /authenticate/:provider     securesocial.controllers.ProviderController.authenticateByPost(provider)
GET     /not-authorized             securesocial.controllers.ProviderController.notAuthorized

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.at(path="/public", file)